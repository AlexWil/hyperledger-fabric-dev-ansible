---
- hosts: all
  vars_files:
    - variables.yml
  become: yes
  become_user: "{{ server_user }}"
  tasks:
    - name: Creates directory
      file: path=~/fabric-tools state=directory
    - name: Adding the path in the bashrc files
      lineinfile: dest=~/.bashrc line='export FABRIC_VERSION={{ hyperledger_fabric_version }}' insertafter='EOF' state=present
    - name: Configure globally which FABRIC_VERSION to use
      shell: >
        . ~/.bashrc && echo $FABRIC_VERSION
    - name: Download fabric-dev-servers.zip
      get_url:
        url: "{{ fabric_dev_servers_zip_url }}"
        dest: ~/fabric-tools/fabric-dev-servers.zip
        mode: 0755
    - name: Install docker, make and requirements for nodeJs
      become_user: root
      yum: pkg={{item}} state=installed
      with_items:
        - docker
        - make
        - glibc-devel
        - gcc
        - patch
        - gcc-c++
    - name: Append the docker group to {{ server_user }} so it can use docker
      become_user: root
      user:
        name: "{{ server_user }}"
        groups: docker
        append: yes
    - name: Start docker
      service:
        name: docker
        state: started
    - name: Extract fabric-dev-servers.zip into ~/fabric-tools
      unarchive:
        src: ~/fabric-tools/fabric-dev-servers.zip
        dest: ~/fabric-tools
        remote_src: yes
    - name: Download fabric docker images by script
      shell: >
        cd ~/fabric-tools && ./downloadFabric.sh
      args:
        executable: /bin/bash
    - name: Install docker-compose
      become_user: root
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: 0755
    - name: Make docker-compose executable
      become_user: root
      file: dest=/usr/local/bin/docker-compose mode=a+x
    - name: Install nvm
      shell: >
        curl https://raw.githubusercontent.com/creationix/nvm/v{{ nvm_version }}/install.sh | sh
        creates=~/.nvm/nvm.sh
    - name: Install node and set version
      shell: >
        /bin/bash -c "source ~/.nvm/nvm.sh && nvm install v{{ node_version }} && nvm alias default v{{ node_version }}"
        creates=~/.nvm/alias
        warn=False
    - name: Install composer-cli globally
      shell: >
         . ~/.bashrc && npm install -g composer-cli@{{ composer_version }}
         creates=~/.nvm/versions/node/v{{ node_version }}/bin/composer
    - name: start fabric containers
      command: cd ~/fabric-tools && ./startFabric.sh
